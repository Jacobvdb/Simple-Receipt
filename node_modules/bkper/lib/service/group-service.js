"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccounts = exports.getGroup = exports.getGroups = exports.getGroupsByAccountId = exports.deleteGroup = exports.updateGroup = exports.createGroup = void 0;
const HttpApiRequest_1 = require("./HttpApiRequest");
function createGroup(bookId, group) {
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/groups`).setMethod('POST').setPayload(group).fetch();
        return response.data;
    });
}
exports.createGroup = createGroup;
function updateGroup(bookId, group) {
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/groups`).setMethod('PUT').setPayload(group).fetch();
        return response.data;
    });
}
exports.updateGroup = updateGroup;
function deleteGroup(bookId, group) {
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/groups/${group.id}`).setMethod('DELETE').fetch();
        return response.data;
    });
}
exports.deleteGroup = deleteGroup;
function getGroupsByAccountId(bookId, accountId) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/accounts/${accountId}/groups`).setMethod('GET').fetch();
        return ((_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.items) || [];
    });
}
exports.getGroupsByAccountId = getGroupsByAccountId;
function getGroups(bookId) {
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/groups`).setMethod('GET').fetch();
        var groupsPlain = response.data;
        if (!(groupsPlain === null || groupsPlain === void 0 ? void 0 : groupsPlain.items)) {
            return [];
        }
        return groupsPlain.items;
    });
}
exports.getGroups = getGroups;
function getGroup(bookId, idOrName) {
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/groups/${encodeURIComponent(idOrName)}`).setMethod('GET').fetch();
        return response.data;
    });
}
exports.getGroup = getGroup;
function getAccounts(bookId, idOrName) {
    return __awaiter(this, void 0, void 0, function* () {
        var response = yield new HttpApiRequest_1.HttpBooksApiV5Request(`${bookId}/groups/${encodeURIComponent(idOrName)}/accounts`).setMethod('GET').fetch();
        var accountsPlain = response.data;
        if (!(accountsPlain === null || accountsPlain === void 0 ? void 0 : accountsPlain.items)) {
            return [];
        }
        return accountsPlain.items;
    });
}
exports.getAccounts = getAccounts;
//# sourceMappingURL=group-service.js.map