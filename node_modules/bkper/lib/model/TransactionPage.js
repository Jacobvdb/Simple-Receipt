"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionPage = void 0;
const Transaction_1 = require("./Transaction");
const TransactionService = __importStar(require("../service/transaction-service"));
const utils_1 = require("../utils");
class TransactionPage {
    init(book, query, lastCursor) {
        return __awaiter(this, void 0, void 0, function* () {
            var transactionList = yield TransactionService.searchTransactions(book.getId(), query, 1000, lastCursor);
            if (transactionList.items == null) {
                transactionList.items = [];
            }
            this.transactions = utils_1.wrapObjects(new Transaction_1.Transaction(), transactionList.items);
            book.configureTransactions_(this.transactions);
            this.cursor = transactionList.cursor;
            if (transactionList.account) {
                this.account = yield book.getAccount(transactionList.account);
            }
            this.index = 0;
            if (this.transactions == null || this.transactions.length == 0 || this.cursor == null || this.cursor == "") {
                this.reachEnd = true;
            }
            else {
                this.reachEnd = false;
            }
            return this;
        });
    }
    getCursor() {
        return this.cursor;
    }
    hasNext() {
        return this.index < this.transactions.length;
    }
    hasReachEnd() {
        return this.reachEnd;
    }
    getIndex() {
        if (this.index >= this.transactions.length) {
            return 0;
        }
        else {
            return this.index;
        }
    }
    setIndex(index) {
        this.index = index;
    }
    getAccount() {
        return this.account;
    }
    next() {
        if (this.index < this.transactions.length) {
            var transaction = this.transactions[this.index];
            this.index++;
            return transaction;
        }
        else {
            return null;
        }
    }
}
exports.TransactionPage = TransactionPage;
//# sourceMappingURL=TransactionPage.js.map