"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.File = void 0;
const FileService = __importStar(require("../service/file-service"));
/**
 *
 * This class defines a File uploaded to a [[Book]].
 *
 * A File can be attached to a [[Transaction]] or used to import data.
 *
 * @public
 */
class File {
    /**
     * Gets the File id
     */
    getId() {
        return this.wrapped.id;
    }
    /**
     * Gets the File name
     */
    getName() {
        return this.wrapped.name;
    }
    /**
     *
     * Sets the name of the File.
     *
     * @returns This File, for chainning.
     */
    setName(name) {
        this.wrapped.name = name;
        return this;
    }
    /**
     * Gets the File content type
     */
    getContentType() {
        return this.wrapped.contentType;
    }
    /**
     *
     * Sets the File content type.
     *
     * @returns This File, for chainning.
     */
    setContentType(contentType) {
        this.wrapped.contentType = contentType;
        return this;
    }
    /**
     * Gets the file content Base64 encoded
     */
    getContent() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.getId() != null && (this.wrapped == null || this.wrapped.content == null)) {
                this.wrapped = yield FileService.getFile(this.book.getId(), this.getId());
            }
            return this.wrapped.content;
        });
    }
    /**
     *
     * Sets the File content Base64 encoded.
     *
     * @returns This File, for chainning.
     */
    setContent(content) {
        this.wrapped.content = content;
        return this;
    }
    /**
     * Gets the file serving url for accessing via browser
     */
    getUrl() {
        return this.wrapped.url;
    }
    /**
     * Gets the file size in bytes
     */
    getSize() {
        return this.wrapped.size;
    }
    /**
     * Perform create new File.
     */
    create() {
        return __awaiter(this, void 0, void 0, function* () {
            this.wrapped = yield FileService.createFile(this.book.getId(), this.wrapped);
            return this;
        });
    }
}
exports.File = File;
//# sourceMappingURL=File.js.map