"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.App = void 0;
const app_service_1 = require("../service/app-service");
/**
 * Defines an App on Bkper.
 *
 * Apps can be installed on Books by users.
 *
 * @public
 */
class App {
    /** @internal */
    constructor() {
        this.wrapped = {};
    }
    /**
     *
     * Sets the webhook url for development.
     *
     * @returns This App, for chainning.
     */
    setWebhookUrlDev(webhookUrlDev) {
        if (webhookUrlDev) {
            this.wrapped.webhookUrlDev = webhookUrlDev;
        }
        else {
            this.wrapped.webhookUrlDev = 'null';
        }
        return this;
    }
    /**
     * Partially update an App, applying pending changes.
     */
    patch() {
        return __awaiter(this, void 0, void 0, function* () {
            yield app_service_1.patchApp(this.wrapped);
            return this;
        });
    }
    /** @internal */
    update() {
        return __awaiter(this, void 0, void 0, function* () {
            yield app_service_1.updateApp(this.wrapped);
            return this;
        });
    }
    /** @internal */
    setJson(json) {
        this.wrapped = json;
        return this;
    }
    /** @internal */
    getId() {
        return this.wrapped.id;
    }
    /** @internal */
    setUserEmails(emails) {
        this.wrapped.userEmails = emails;
        return this;
    }
    /** @internal */
    setDeveloperEmail(email) {
        this.wrapped.developerEmail = email;
        return this;
    }
    /** @internal */
    setClientSecret(clientSecret) {
        this.wrapped.clientSecret = clientSecret;
        return this;
    }
    /** @internal */
    setReadme(readme) {
        this.wrapped.readme = readme;
        return this;
    }
    /** @internal */
    create() {
        return __awaiter(this, void 0, void 0, function* () {
            yield app_service_1.createApp(this.wrapped);
            return this;
        });
    }
}
exports.App = App;
//# sourceMappingURL=App.js.map