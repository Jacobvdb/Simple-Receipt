"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Month = exports.Period = exports.AccountType = exports.Permission = exports.DecimalSeparator = exports.Periodicity = void 0;
/**
 * The Periodicity of the query. It may depend on the level of granularity you write the range params.
 *
 * @public
 */
var Periodicity;
(function (Periodicity) {
    /**
     * Example: after:25/01/1983, before:04/03/2013, after:$d-30, before:$d, after:$d-15/$m
     */
    Periodicity["DAILY"] = "DAILY";
    /**
     * Example: after:jan/2013, before:mar/2013, after:$m-1, before:$m
     */
    Periodicity["MONTHLY"] = "MONTHLY";
    /**
     * Example: on:2013, after:2013, $y
     */
    Periodicity["YEARLY"] = "YEARLY";
})(Periodicity = exports.Periodicity || (exports.Periodicity = {}));
/**
 * Decimal separator of numbers on book
 *
 * @public
 */
var DecimalSeparator;
(function (DecimalSeparator) {
    /**
     * ,
     */
    DecimalSeparator["COMMA"] = "COMMA";
    /**
     * .
     */
    DecimalSeparator["DOT"] = "DOT";
})(DecimalSeparator = exports.DecimalSeparator || (exports.DecimalSeparator = {}));
/**
 * Enum representing permissions of user in the Book
 *
 * Learn more at [share article](https://help.bkper.com/en/articles/2569153-share-your-book-with-your-peers).
 *
 * @public
 */
var Permission;
(function (Permission) {
    /**
     * No permission
     */
    Permission["NONE"] = "NONE";
    /**
     * View transactions, accounts and balances.
     */
    Permission["VIEWER"] = "VIEWER";
    /**
     * Record and delete drafts only. Useful to collect data only
     */
    Permission["RECORDER"] = "RECORDER";
    /**
     * View transactions, accounts, record and delete drafts
     */
    Permission["POSTER"] = "POSTER";
    /**
     * Manage accounts, transactions, book configuration and sharing
     */
    Permission["EDITOR"] = "EDITOR";
    /**
     * Manage everything, including book visibility and deletion. Only one owner per book.
     */
    Permission["OWNER"] = "OWNER";
})(Permission = exports.Permission || (exports.Permission = {}));
/**
 * Enum that represents account types.
 *
 * @public
 */
var AccountType;
(function (AccountType) {
    /**
     * Asset account type
     */
    AccountType["ASSET"] = "ASSET";
    /**
     * Liability account type
     */
    AccountType["LIABILITY"] = "LIABILITY";
    /**
     * Incoming account type
     */
    AccountType["INCOMING"] = "INCOMING";
    /**
     * Outgoing account type
     */
    AccountType["OUTGOING"] = "OUTGOING";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
/**
 * Enum that represents a period slice.
 *
 * @public
 */
var Period;
(function (Period) {
    /**
     *  Monthly period
     */
    Period["MONTH"] = "MONTH";
    /**
     * Quarterly period
     */
    Period["QUARTER"] = "QUARTER";
    /**
     * Yearly period
     */
    Period["YEAR"] = "YEAR";
})(Period = exports.Period || (exports.Period = {}));
/**
 * Enum that represents a Month.
 *
 * @public
 */
var Month;
(function (Month) {
    Month["JANUARY"] = "JANUARY";
    Month["FEBRUARY"] = "FEBRUARY";
    Month["MARCH"] = "MARCH";
    Month["APRIL"] = "APRIL";
    Month["MAY"] = "MAY";
    Month["JUNE"] = "JUNE";
    Month["JULY"] = "JULY";
    Month["AUGUST"] = "AUGUST";
    Month["SEPTEMBER"] = "SEPTEMBER";
    Month["OCTOBER"] = "OCTOBER";
    Month["NOVEMBER"] = "NOVEMBER";
    Month["DECEMBER"] = "DECEMBER";
})(Month = exports.Month || (exports.Month = {}));
//# sourceMappingURL=Enums.js.map